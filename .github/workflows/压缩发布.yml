name: 压缩发布

on:
  schedule:
    - cron: '0 3,20 * * *'
  workflow_dispatch:
env:
  TZ: Asia/Shanghai
permissions:
  contents: write
  pull-requests: write
  actions: write
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      - name: 检查更新
        id: getversion
        run: |
          ver=`curl https://api.github.com/repos/AlistGo/alist/releases/latest | jq -r '.tag_name'`
          cver=`curl https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name'`
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT
      - name: delete-workflow
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 0
          keep_minimum_runs: 0

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    steps:
      -
        name: 检查代码仓库
        uses: actions/checkout@v4
      - 
        name: 下载并压缩
        run: |
          rm -rf /opt/st
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          cd /opt/st
          tag=`curl https://api.github.com/repos/AlistGo/alist/releases/latest | grep 'tag_name' | cut -d\" -f4`
          echo tag=$tag
          [ -z "$tag" ] && tag=${{ needs.check.outputs.ver }}
          sudo chmod 0777 /etc/resolv.conf
          cat >>/etc/resolv.conf <<EOF
          nameserver 8.8.8.8 
          nameserver 4.4.4.4
          EOF
          curl -k -L -o "/opt/st/alist-linux-musl-mipsle.tar.gz" "https://github.com/AlistGo/alist/releases/download/$tag/alist-linux-musl-mipsle.tar.gz" 
          tar -xzvf /opt/st/alist-linux-musl-mipsle.tar.gz -C /opt/st
          tar -xvf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          chmod 777 /opt/st/strip
          /opt/st/strip alist
          /opt/upx-3.95-amd64_linux/upx --lzma --best alist
          tar czvf alist.tar.gz alist
          echo $(md5sum alist.tar.gz | awk '{print $1;}') >MD5.txt
      - name: 设置机器人
        run : |
         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
         git config --global user.name "github-actions[bot]"
         sudo timedatectl set-timezone "Asia/Shanghai"
      - name: 上传
        run: |
          git clone https://github.com/${{ github.repository }}.git /opt/alis
          [ ! -d "/opt/alis/install/${{ needs.check.outputs.ver }}" ] && mkdir -p "/opt/alis/install/${{ needs.check.outputs.ver }}"
          cp -rf /opt/st/alist.tar.gz "/opt/alis/install/${{ needs.check.outputs.ver }}/alist.tar.gz"
          cp -rf /opt/st/alist "/opt/alis/install/${{ needs.check.outputs.ver }}/alist"
          echo $(md5sum /opt/st/alist | awk '{print $1;}') >"/opt/alis/install/${{ needs.check.outputs.ver }}/MD5.txt"
          cd /opt/alis
          git add .
          git commit -am "${{ needs.check.outputs.ver }} 更新时间： $(date '+%Y-%m-%d %H:%M:%S')"
          #git push --quiet "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          force_with_lease: true
      - 
        name: 发布
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
           > ### 上传时间 ：${{ env.build_time }}

           ** [官方更新说明](https://github.com/AlistGo/alist/releases)**
          tag_name: ${{ needs.check.outputs.ver }}
          files: |
              /opt/st/alist.tar.gz
              /opt/st/alist
              /opt/st/MD5.txt
  keepalive-workflow:
    # github超过60天未提交将自动停止工作流
    name: 工作流保活 
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: gautamkrishnar/keepalive-workflow@v2
        #with:
          #use_api: true
